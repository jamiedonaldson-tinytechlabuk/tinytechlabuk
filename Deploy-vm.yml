---
- hosts: localhost
  gather_facts: no
  tasks:

#####################################################################
#################### Deploy from VMware Template ####################
#####################################################################
  - name: Clone the template with static network
    vmware_guest:
      hostname: '{{ vcenter }}'
      username: '{{ lookup("env", "VMWARE_USER") }}'
      password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
      validate_certs: False
      name: "{{ vm_hostname }}"
      template: "{{ template_name }}"
      datacenter: "TinyTechLabUK"
      folder: /Ansible_Builds
      esxi_hostname: '{{ esxi_hostname }}'
      datastore: "{{ vm_datastore }}"
      type: "thin"
      hardware:
        memory_mb: "{{ vm_memory }}"
        num_cpus: "{{ vm_cpus }}"
        scsi: paravirtual
        hotadd_cpu: True
        hotremove_cpu: True
        hotadd_memory: True
        boot_firmware: "efi"
      networks:
      - name: "{{ vm_network }}"
        ip: "{{ vm_ip }}"
        netmask: "{{ vm_netmask }}"
        gateway: "{{ vm_gw }}"
        type: "{{ vm_net_type }}"
        dns_servers: "{{ vm_dns_1 }}"
        dns_servers: "{{ vm_dns_2 }}"
        dns_servers: "{{ vm_dns_3 }}"
        connected: yes
        start_connected: yes
      customization:
        autologon: true
        autologoncount: 2
        hostname: "{{ vm_hostname }}"
        dns_servers:
        - "{{ vm_dns_1 }}"
        - "{{ vm_dns_2 }}"
        - "{{ vm_dns_3 }}"
        joindomain: 'internal.tinytechlab.uk'
        domainadmin: 'svcacctj@internal.tinytechlab.uk'
        domainadminpassword: 'wgqGG3ALqnjDaQ7tVcbu'
#       password: '{{ lookup("env", "WORKGROUP_Administrator") }}'
        timezone: 085 
        runonce:
          - powershell.exe -ExecutionPolicy Unrestricted -File C:\Scripts\Ansible\ConfigureRemotingForAnsible.ps1 -ForceNewSSLCert -EnableCredSSP
      state: poweredon

#####################################################################
######################## Domain Check & Join ########################
#####################################################################

- hosts: newVMDeployment
  vars:
    locationDist:
      AH_Lab1: UKAH
      UKDCA-Gen: UKDCA
      UKDCB-Gen: UKDCB
    location: '{{locationDist[datacenter_name | default("Unknown")] | default("") }}'
  gather_facts: yes
  tasks:
    
  - name: Test if computer is domain joined
    win_shell: |
      (gwmi win32_computersystem).partofdomain
    register: isDomainJoined
    when: join_domain == "YES"
    
  - name: Set fact for if computer is domain joined
    set_fact:
      domain_joined: "{{ isDomainJoined.stdout | regex_replace('(\\r\\n)','') }}"
    when: join_domain == "YES"
    
  - name: Report that computer is domain joined
    debug:
      msg: "Computer is already joined to the domain."
    when: domain_joined == true and join_domain == "YES"
    
  - name: Report that computer will be joined to the domain.
    debug:
      msg: "Computer is not joined to any domain, joining now.."
    when: domain_joined == false and join_domain == "YES"
    
  - name: Join Domain
    win_shell: |
      netdom join $env:computername /domain:internal.tinytechlab.uk /UserD:{{ lookup("env", "ANSIBLE_NET_USERNAME") }} /PasswordD:{{ lookup("env", "ANSIBLE_NET_PASSWORD") }} /ou:"OU\=Application,OU\=Walmart,OU\=Server,DC\=UK,DC\=Wal-Mart,DC\=com"
    when: domain_joined == false and join_domain == "YES"
    
  - name: Report that machine will be rebooted
    debug:
      msg: "Rebooting computer now.."
    when: domain_joined == false and join_domain == "YES"
      
  - name: Reboot machine after domain join
    win_reboot:
      reboot_timeout: 3600
    when: domain_joined == false and join_domain == "YES"
    
  - name: Test if computer is domain joined after reboot
    win_shell: |
      (gwmi win32_computersystem).partofdomain
    register: isDomainJoined
    when: domain_joined == false and join_domain == "YES"
    
  - name: Set fact for if computer is domain joined
    set_fact:
      domain_joined: "{{ isDomainJoined.stdout | regex_replace('(\\r\\n)','') }}"
    when: domain_joined == false and join_domain == "YES"
    
  - name: Report that join domain has failed.
    debug:
      msg: "Domain Join has failed. Please check logs."
    when: domain_joined == false and join_domain == "YES"
    
#####################################################################
#####################################################################
