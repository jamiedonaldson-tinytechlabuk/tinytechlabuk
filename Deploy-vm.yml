---
- hosts: localhost
  gather_facts: no
  tasks:

#####################################################################
#################### Deploy from VMware Template ####################
#####################################################################
  - name: Clone the template with static network
    vmware_guest:
      hostname: '{{ vcenter }}'
      username: '{{ lookup("env", "VMWARE_USER") }}'
      password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
      validate_certs: False
      name: "{{ vm_hostname }}"
      template: "{{ template_name }}"
      datacenter: "TinyTechLabUK"
      folder: /Ansible_Builds
      esxi_hostname: '{{ esxi_hostname }}'
      datastore: "{{ vm_datastore }}"
      hardware:
        memory_mb: "{{ vm_memory }}"
        num_cpus: "{{ vm_cpus }}"
        scsi: paravirtual
        hotadd_cpu: True
        hotremove_cpu: True
        hotadd_memory: True
        boot_firmware: "efi"
      networks:
      - name: "{{ vm_network }}"
        ip: "{{ vm_ip }}"
        netmask: "{{ vm_netmask }}"
        gateway: "{{ vm_gw }}"
        type: "{{ vm_net_type }}"
        dns_servers:
        - 10.15.0.240
        - 10.15.0.241
        connected: yes
        start_connected: yes
      customization:
        autologon: true
        autologoncount: 2
        hostname: "{{ vm_hostname }}"
        runonce:
          - powershell.exe -ExecutionPolicy Unrestricted -File C:\Scripts\Ansible\ConfigureRemotingForAnsible.ps1 -ForceNewSSLCert -EnableCredSSP
      state: poweredon
      wait_for_ip_address: yes
      wait_for_customization: yes
    delegate_to: localhost

#####################################################################
######################## Setting DNS Servers ########################
######################################################################

#  - hosts: localhost
  gather_facts: no
  vars:
    ansible_user: 'jdadmin@internal.tinytechlab.uk'
    ansible_password: 'D0n4!d50n2020D0n4!d50n2020'
    ansible_port: 5985
    ansible_winrm_transport: credssp
    ansible_connection: winrm
    ansible_winrm_server_cert_validation: ignore
    ansible_winrm_scheme: http
    windows_runner: ttl-ansiblenode.internal.tinytechlab.uk
 # tasks:
  - name: Set multiple lookup addresses on all visible adapters (usually physical adapters that are in the Up state), with debug logging to a file
    ansible.windows.win_dns_client:
      adapter_names: 'Ethernet0'
      dns_servers:
      - 10.15.0.240
      - 10.15.0.241
      - 10.10.192.240
      log_path: C:\logs\dns_log.txt
    delegate_to: "{{ windows_runner }}"

#####################################################################
######################## Domain Check & Join ########################
#####################################################################
# host should be a member of domain ansible.vagrant; module will ensure the hostname is mydomainclient
# and will use the passed credentials to join domain if necessary.
# Ansible connection should use local credentials if possible.
# If a reboot is required, the second task will trigger one and wait until the host is available.
#- hosts: localhost
#  gather_facts: no
#  tasks:
#  - ansible.windows.win_domain_membership:
#      dns_domain_name: 'internal.tinytechlab.uk'
#      hostname: "{{ vm_hostname }}"
#      domain_admin_user: svcacctj@internal.tinytechlab.uk
#      domain_admin_password: wgqGG3ALqnjDaQ7tVcbu
#      #domain_ou_path: "OU\=Virtual_Servers,OU\=TinyTechLabUK,DC\=internal,DC\=tinytechlab,DC\=uk"
#      state: domain
#    register: domain_state
#
#  - ansible.windows.win_reboot:
#    when: domain_state.reboot_required
#      delegate_to: "{{ windows_runner }}"
#
#####################################################################
#####################################################################
#
#     KMS Activations #
#
# slmgr /skms kms.internal.tinytechlab.uk
# slmgr.vbs /cpky
# slmgr.vbs /ipk N69G4-B89J2-4G8F4-WWYCC-J464C
# slmgr.vbs /ato
