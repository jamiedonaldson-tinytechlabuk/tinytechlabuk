---
- hosts: localhost
  gather_facts: no
  tasks:

#####################################################################
#################### Deploy from VMware Template ####################
#####################################################################
  - name: Clone the template with static network
    vmware_guest:
      hostname: '{{ vcenter }}'
      username: '{{ lookup("env", "VMWARE_USER") }}'
      password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
      validate_certs: false
      name: "{{ vm_hostname }}"
      template: "{{ template_name }}"
      datacenter: "TinyTechLabUK"
      folder: /Ansible_Builds
      esxi_hostname: '{{ esxi_hostname }}'
      datastore: "{{ vm_datastore }}"
      hardware:
        memory_mb: "{{ vm_memory }}"
        num_cpus: "{{ vm_cpus }}"
        scsi: paravirtual
        hotadd_cpu: true
        hotremove_cpu: true
        hotadd_memory: true
        boot_firmware: "efi"
      networks:
      - name: "{{ vm_network }}"
        ip: "{{ vm_ip }}"
        netmask: "{{ vm_netmask }}"
        gateway: "{{ vm_gw }}"
        type: "{{ vm_net_type }}"
        dns_servers:
        - 10.15.0.240
        - 10.15.0.241
        - 10.10.192.240
        connected: yes
        start_connected: yes
      customization:
        autologon: true
        autologoncount: 2
        hostname: "{{ vm_hostname }}"
        runonce:
          - powershell.exe -ExecutionPolicy Unrestricted -File C:\Scripts\Ansible\ConfigureRemotingForAnsible.ps1 -ForceNewSSLCert -EnableCredSSP
      state: poweredon
      wait_for_ip_address: yes
      wait_for_customization: yes
    delegate_to: localhost
    when: vm_net_type == "static"
    
  - name: Clone the template with dhcp network
    vmware_guest:
      hostname: '{{ vcenter }}'
      username: '{{ lookup("env", "VMWARE_USER") }}'
      password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
      validate_certs: False
      name: "{{ vm_hostname }}"
      template: "{{ template_name }}"
      datacenter: "TinyTechLabUK"
      folder: /Ansible_Builds
      esxi_hostname: '{{ esxi_hostname }}'
      datastore: "{{ vm_datastore }}"
      hardware:
        memory_mb: "{{ vm_memory }}"
        num_cpus: "{{ vm_cpus }}"
        scsi: paravirtual
        hotadd_cpu: True
        hotremove_cpu: True
        hotadd_memory: True
        boot_firmware: "efi"
      networks:
      - name: "{{ vm_network }}" 
        type: "{{ vm_net_type }}"       
        dns_servers: "{{ vm_dns | default(omit) }}"
        connected: yes
        start_connected: yes
      customization:
        autologon: true
        autologoncount: 2
        hostname: "{{ vm_hostname }}"
        runonce:
          - powershell.exe -ExecutionPolicy Unrestricted -File C:\Scripts\Ansible\ConfigureRemotingForAnsible.ps1 -ForceNewSSLCert -EnableCredSSP
      state: poweredon
      wait_for_ip_address: yes
      wait_for_customization: yes
    register: result
    delegate_to: localhost
    when: vm_net_type == "dhcp"

  - name: Sleep for 60 seconds to give VM ample time to become reachable
    wait_for:
      timeout: 60
    
#####################################################################
######################## Add to Ansible Host Group###################
##################################################################### 

  - name: Add host to group (static)
    add_host:
     hostname: "{{ vm_ip }}"
     groups:
     - newVMDeployment
    when: vm_net_type == "static"
   
  - name: Add host to group (DHCP)
    add_host:
     hostname: "{{ build_dhcp.instance.ipv4 }}"
     groups:
     - newVMDeployment
    when: vm_net_type == "dhcp"
    
  - name: Sleep for 60 seconds to give VM ample time to become reachable
    wait_for:
      timeout: 60

#####################################################################
#####################################################################

#####################################################################
#################### newVMDeployment Play Configuration #############
#####################################################################

- hosts: newVMDeployment
  vars:
    ansible_port: 5985
    ansible_user: ansible
    ansible_password: Password2021
    ansible_connection: winrm
    ansible_winrm_transport: ntlm
    ansible_winrm_server_cert_validation: ignore
    ansible_winrm_scheme: http
    windows_runner: ttl-ansiblenode.internal.tinytechlab.uk
    gather_facts: yes
  tasks: 

#####################################################################
######################## Setting DNS Servers ########################
#####################################################################

  - name: Setup and activate Windows Server via KMS Server and Time Zone
    win_shell: |
      cscript C:\Windows\System32\slmgr.vbs /skms kms.internal.tinytechlab.uk
      cscript C:\Windows\System32\slmgr.vbs /cpky
      cscript C:\Windows\System32\slmgr.vbs /ipk N69G4-B89J2-4G8F4-WWYCC-J464C
      cscript C:\Windows\System32\slmgr.vbs /ato
      Set-TimeZone "GMT Standard Time"
    delegate_to: "{{ vm_ip }}"

#####################################################################
#####################################################################

#####################################################################
######################## Domain Check & Join ########################
#####################################################################

  - name: Adding VM to Domain
    ansible.windows.win_domain_membership:
      dns_domain_name: internal.tinytechlab.uk
      hostname: "{{ vm_hostname }}"
      domain_admin_user: svcacctj@internal.tinytechlab.uk
      domain_admin_password: wgqGG3ALqnjDaQ7tVcbu
      domain_ou_path: "OU=Virtual_Servers,OU=TinyTechLabUK,DC=internal,DC=tinytechlab,DC=uk"
      state: domain
    register: domain_state

  - ansible.windows.win_reboot:
    when: domain_state.reboot_required
    delegate_to: "{{ vm_ip }}"

#####################################################################
################### Windows Patching process ########################
#####################################################################

  - name: Install all updates and reboot as many times as needed
    ansible.windows.win_updates:
      category_names: '*'
      reboot: yes
      log_path: C:\ansible_wu.txt
    delegate_to: "{{ vm_ip }}"
